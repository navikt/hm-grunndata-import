apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: hm-grunndata-import
  namespace: teamdigihot
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  labels:
    team: teamdigihot
spec:
  image: {{ image }}
  port: 8080
  liveness:
    path: /import/internal/isAlive
    initialDelay: 20
  readiness:
    path: /import/internal/isReady
    initialDelay: 20
  replicas:
    min: {{ min_replicas }}
    max: {{ max_replicas }}
    cpuThresholdPercentage: 50
  resources:
    limits:
      memory: 2048Mi
    requests:
      cpu: 200m
      memory: 256Mi
  prometheus:
    enabled: true
    path: /import/internal/prometheus
  ingresses:
  {{#each ingress as |url|}}
     - {{url}}
  {{/each}}
  envFrom:
    - secret: hm-grunndata-import
  env:
    - name: DB_DRIVER
      value: "org.postgresql.Driver"
    - name: DB_JDBC_URL
      value: "jdbc:postgresql://${DB_HOST}:5432/importapi"
    - name: RAPIDSANDRIVERS_ENABLED
      value: "{{ rapidsandrivers_enabled }}"
    - name: SCHEDULERS_ENABLED
      value: "{{ schedulers_enabled }}"
    - name: JDK_JAVA_OPTIONS
      value: "{{ java_opts }}"
    - name: GRUNNDATA_DB_URL
      value: "http://hm-grunndata-db"
    - name: MEDIA_UPLOAD_URL
      value: "http://hm-grunndata-media"
    - name: SERVER_PORT
      value: "8080"
  gcp:
    sqlInstances:
      - name: hm-grunndata-import
        type: POSTGRES_14
        tier: {{ disk_tier }}
        diskType: SSD
        highAvailability: true
        diskSize: {{ disk_size }}
        diskAutoresize: true
        autoBackupHour: 3
        databases:
          - name: importapi
            envVarPrefix: DB
        cascadingDelete: false
  kafka:
    pool: {{ kafka_cluster }}
  leaderElection: true
  accessPolicy:
    outbound:
      rules:
        - application: hm-grunndata-db
        - application: hm-grunndata-media
    inbound:
      rules:
        - application: hm-grunndata-register
